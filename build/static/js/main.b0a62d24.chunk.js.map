{"version":3,"sources":["components/DrawingPanel/Pixel/Pixel.js","components/DrawingPanel/Pixel/index.js","components/DrawingPanel/Row/Row.js","components/DrawingPanel/Row/index.js","components/UI/Card/Card.js","components/UI/Card/index.js","components/UI/Button/Button.js","components/UI/Button/index.js","components/DrawingPanel/DrawingPanel.js","components/DrawingPanel/index.js","components/UI/Input/Input.js","components/UI/Input/index.js","components/UI/Alert/Alert.js","components/UI/Alert/index.js","components/Editor/Editor.js","components/Editor/index.js","hooks/useComponentVisible.js","assets/img/logo.png","components/Header/Header.js","components/Header/index.js","components/Footer/Footer.js","components/Footer/index.js","app/App.js","app/index.js","index.js"],"names":["Pixel","color","clickIsHolding","bgColor","useState","pixelColor","setPixelColor","oldColor","setOldColor","applyColor","className","onDragStart","e","preventDefault","onClick","onMouseEnter","onMouseLeave","onMouseUp","style","backgroundColor","Row","props","width","selectedColor","pixels","i","push","Card","children","classNames","Button","buttonText","onClickHandler","DrawingPanel","height","React","setClickIsHolding","setSelectedColor","prevSelectedColor","setPrevSelectedColor","cursor","setCursor","panelRef","useRef","rows","onMouseUpHandler","changeTool","toolName","target","id","onChangeComplete","hex","ref","onMouseDown","exportComponentAsPNG","fileName","OptionInput","Input","defaultValue","onChangeHandler","type","label","onChange","Alert","text","Editor","panelWidth","setPanelWidth","panelHeight","setPanelHeight","hideOptions","setHideOptions","setButtonText","background","setBackground","error","setError","initialIsVisible","isComponentVisible","setIsComponentVisible","handleClickOutside","event","current","contains","useEffect","document","addEventListener","removeEventListener","useComponentVisible","showBackgroundModal","prevState","value","colors","Header","src","Logo","alt","Footer","year","Date","getFullYear","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b0a62d24.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './Pixel.scss';\r\n\r\nfunction Pixel({ color, clickIsHolding, bgColor }) {\r\n    const [pixelColor, setPixelColor] = useState(bgColor);\r\n    const [oldColor, setOldColor] = useState(pixelColor);\r\n\r\n    const applyColor = () => {\r\n        setPixelColor(color);\r\n        setOldColor(color);\r\n    }\r\n\r\n    const changeColorOnHover = () => {\r\n        setPixelColor(color)\r\n\r\n        if (!clickIsHolding) {\r\n            setOldColor(pixelColor)\r\n        }\r\n    }\r\n\r\n    const resetColor = () => {\r\n        if (!clickIsHolding) {\r\n            setPixelColor(oldColor)\r\n        }\r\n    }\r\n\r\n    const disableDragHandler = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"pixel\"\r\n            onDragStart={disableDragHandler}\r\n            onClick={applyColor}\r\n            onMouseEnter={changeColorOnHover}\r\n            onMouseLeave={resetColor}\r\n            onMouseUp={applyColor}\r\n            style={{ backgroundColor: pixelColor }}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pixel\r\n","import Pixel from './Pixel';\r\nexport default Pixel;","import React from 'react'\r\nimport Pixel from '../Pixel';\r\n\r\nimport './Row.scss';\r\n\r\nfunction Row(props) {\r\n    const { width, selectedColor, clickIsHolding, bgColor } = props;\r\n\r\n    let pixels = [];\r\n\r\n    for (let i = 0; i < width; i++) {\r\n        pixels.push(<Pixel clickIsHolding={clickIsHolding} key={i} bgColor={bgColor} color={selectedColor} />)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {pixels}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import Row from './Row';\r\nexport default Row;","import React from 'react'\r\nimport './Card.scss';\r\n\r\nfunction Card({ children, className }) {\r\n\r\n    const classNames = !className ? \"card\" : `card ${className}`;\r\n\r\n    return (\r\n        <div className={classNames}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import Card from './Card';\r\nexport default Card;","import React from 'react'\r\n\r\nimport './Button.scss';\r\n\r\nfunction Button({ buttonText, onClickHandler }) {\r\n    return (\r\n        <button className=\"button\" onClick={onClickHandler}> {buttonText} </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Button from './Button';\r\nexport default Button;","import React, { useRef, useState } from 'react'\r\nimport Row from './Row';\r\nimport { exportComponentAsPNG } from \"react-component-export-image\"\r\nimport { CirclePicker } from 'react-color';\r\nimport Card from '../UI/Card';\r\nimport Button from '../UI/Button';\r\n\r\nimport './DrawningPanel.scss';\r\n\r\nfunction DrawingPanel({ width, height, bgColor }) {\r\n    const [clickIsHolding, setClickIsHolding] = React.useState(false);\r\n    const [selectedColor, setSelectedColor] = useState(\"#f44336\");\r\n    const [prevSelectedColor, setPrevSelectedColor] = useState(\"#f44336\");\r\n    const [cursor, setCursor] = useState('draw');\r\n    const panelRef = useRef();\r\n\r\n    let rows = [];\r\n\r\n    for (let i = 0; i < height; i++) {\r\n        rows.push(<Row key={i} width={width} selectedColor={selectedColor} bgColor={bgColor} clickIsHolding={clickIsHolding} />)\r\n    }\r\n\r\n    const onMouseDownHandler = () => {\r\n        setClickIsHolding(true);\r\n    }\r\n\r\n    const onMouseUpHandler = () => {\r\n        setClickIsHolding(false);\r\n    }\r\n\r\n    const changeColorHandler = (color) => {\r\n        setSelectedColor(color.hex);\r\n        setCursor('draw');\r\n    }\r\n\r\n    const onExportImageHandler = () => {\r\n        exportComponentAsPNG(panelRef, { fileName: 'pixelart' })\r\n    }\r\n\r\n    const changeTool = (e) => {\r\n        const toolName = e.target.id;\r\n\r\n        setCursor(toolName);\r\n\r\n        if (toolName === 'eraser') {\r\n            setPrevSelectedColor(selectedColor);\r\n            setSelectedColor(bgColor);\r\n            return;\r\n        }\r\n\r\n        setSelectedColor(prevSelectedColor);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"drawning-panel\">\r\n            <div className=\"bg-circle\">\r\n                <CirclePicker color={selectedColor} onChangeComplete={changeColorHandler} />\r\n            </div>\r\n\r\n            <div className=\"toolbar\">\r\n                <div id=\"draw\" className={cursor === 'draw' ? 'toolbar__item draw-button tool-active' : 'toolbar__item draw-button'} onClick={changeTool}>\r\n                </div>\r\n                <div id=\"eraser\" className={cursor === 'eraser' ? 'toolbar__item eraser-button tool-active' : 'toolbar__item eraser-button'} onClick={changeTool}>\r\n                </div>\r\n            </div>\r\n\r\n            <div ref={panelRef}\r\n                className={`pixels ${cursor}-cursor`}\r\n                onMouseLeave={onMouseUpHandler}\r\n                onMouseDown={onMouseDownHandler}\r\n                onMouseUp={onMouseUpHandler}>\r\n                {rows}\r\n            </div>\r\n\r\n            <Button\r\n                onClickHandler={onExportImageHandler}\r\n                buttonText={\"export as PNG\"}\r\n            />\r\n        </Card >\r\n    )\r\n}\r\n\r\nexport default DrawingPanel\r\n","import DrawingPanel from './DrawingPanel';\r\nexport default DrawingPanel;","import React from 'react';\r\nimport './Input.scss';\r\n\r\nfunction OptionInput({ defaultValue, onChangeHandler, type, label, className }) {\r\n\r\n    const classNames = !className ? \"input\" : `input ${className}`;\r\n\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <input\r\n                type={type}\r\n                className={classNames}\r\n                defaultValue={defaultValue}\r\n                onChange={onChangeHandler}\r\n            />\r\n            <div>{label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionInput\r\n","import Input from './Input';\r\nexport default Input;","import React from 'react';\r\nimport Card from '../Card';\r\n\r\nimport './Alert.scss';\r\n\r\nfunction Alert({ text }) {\r\n    return (\r\n        <Card className=\"alert\">\r\n            {text}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import Alert from './Alert';\r\nexport default Alert;","import React, { useState } from 'react';\r\nimport DrawingPanel from '../DrawingPanel';\r\nimport { GithubPicker } from 'react-color';\r\nimport Button from '../UI/Button';\r\nimport Input from '../UI/Input';\r\nimport Card from '../UI/Card';\r\nimport useComponentVisible from '../../hooks/useComponentVisible';\r\n\r\nimport './Editor.scss';\r\nimport Alert from '../UI/Alert';\r\n\r\nfunction Editor() {\r\n    const [panelWidth, setPanelWidth] = useState(16)\r\n    const [panelHeight, setPanelHeight] = useState(16)\r\n    const [hideOptions, setHideOptions] = useState(false)\r\n    const [buttonText, setButtonText] = useState(\"start\")\r\n    const [background, setBackground] = useState(\"#ffffff\")\r\n    const [error, setError] = useState(false)\r\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\r\n\r\n    const initialDrawingPanel = () => {\r\n        if (panelWidth > 50 || panelWidth < 2) {\r\n            setError('Width must be less than 50 and more than 2')\r\n            return;\r\n        }\r\n\r\n        if (panelHeight > 50 || panelHeight < 2) {\r\n            setError('Height must be less than 50 and more than 2')\r\n            return;\r\n        }\r\n\r\n        if (error) {\r\n            return;\r\n        }\r\n        setHideOptions(prevState => !prevState);\r\n        !hideOptions ? setButtonText(\"reset dimensions\") : setButtonText(\"start\");\r\n    }\r\n\r\n    const onChangeHeightInput = (e) => {\r\n        setError(false)\r\n        setPanelHeight(e.target.value)\r\n    }\r\n\r\n    const onChangeWidthInput = (e) => {\r\n        setError(false)\r\n        setPanelWidth(e.target.value)\r\n    }\r\n\r\n    const changeBackgroundHandler = (color) => {\r\n        setBackground(color.hex)\r\n        showBackgroundModal();\r\n    }\r\n\r\n    const showBackgroundModal = () => {\r\n        setIsComponentVisible(prevState => !prevState)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error && <Alert text={error}></Alert>}\r\n\r\n            <Card>\r\n                {!hideOptions &&\r\n                    <div className=\"editor\">\r\n                        <div className=\"editor-title\">Dimensions:</div>\r\n                        <div className=\"options\">\r\n                            <Input\r\n                                defaultValue={panelHeight}\r\n                                onChangeHandler={onChangeHeightInput}\r\n                                type={\"number\"}\r\n                                label={\"Height\"}\r\n                            />\r\n\r\n                            <span className='size-divider'>x</span>\r\n\r\n                            <Input\r\n                                defaultValue={panelWidth}\r\n                                onChangeHandler={onChangeWidthInput}\r\n                                type={\"number\"}\r\n                                label={\"Width\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"background-color\" onClick={showBackgroundModal}>\r\n                            Background color: <span style={{ background: background }}></span>\r\n                        </div>\r\n\r\n                        {isComponentVisible &&\r\n                            <div className=\"background-modal\" ref={ref}>\r\n                                <GithubPicker\r\n                                    color={background}\r\n                                    onChangeComplete={changeBackgroundHandler}\r\n                                    colors={['#ffffff', '#DB3E00', '#FCCB00', '#008B02', '#006B76', '#1273DE', '#004DCF', '#5300EB']}\r\n                                />\r\n                            </div>}\r\n                    </div>}\r\n\r\n                {!error && <Button onClickHandler={initialDrawingPanel} buttonText={buttonText} />}\r\n            </Card>\r\n\r\n            {\r\n                hideOptions && <DrawingPanel\r\n                    bgColor={background}\r\n                    width={panelWidth}\r\n                    height={panelHeight}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n","import Editor from './Editor';\r\nexport default Editor;","import { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function useComponentVisible(initialIsVisible) {\r\n    const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\r\n    const ref = useRef(null);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n            setIsComponentVisible(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n        };\r\n    });\r\n\r\n    return { ref, isComponentVisible, setIsComponentVisible };\r\n}","export default __webpack_public_path__ + \"static/media/logo.b4296df8.png\";","import React from 'react';\r\nimport Card from '../UI/Card';\r\nimport './Header.scss';\r\nimport Logo from '../../assets/img/logo.png'\r\n\r\nfunction Header() {\r\n    return (\r\n        <Card className={\"header\"}>\r\n            <div className=\"header__logo\">\r\n                <img src={Logo} alt=\"logo\" />\r\n            </div>\r\n            <div className=\"header__title\">\r\n                PIXEL ART\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import Header from './Header';\r\nexport default Header;","import React from 'react'\r\nimport Card from '../UI/Card';\r\n\r\nimport './Footer.scss';\r\n\r\nfunction Footer() {\r\n    const year = new Date().getFullYear();\r\n\r\n    return (\r\n        <Card className=\"footer\">\r\n            {year}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import Footer from './Footer';\r\nexport default Footer;","import './App.scss';\nimport Editor from '../components/Editor';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Editor />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App';\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}